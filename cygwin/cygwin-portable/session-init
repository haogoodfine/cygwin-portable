#!/bin/bash
PATH="/usr/bin:$PATH"

# Utility functions
# Suppress stderr
n () { "$@" 2> /dev/null; }
# Create symlink
l () { n rm "$1"; ln -s "$2" "$1"; }
# Copy and overwrite file
c () { n rm "$1"; cp "$2" "$1"; }

# Functions for setting up links to special folders
# A helper function
mksf() {

	# Do nothing if a link already exists.
	if [ '!' -e "$2" ]; then

		# Find out target.
		sf_path="$(cygpath -F $1)"

		# Only create unambiguous links to known targets.
		if [ "$(echo "$sf_path"|grep -Fc /)" == 1 ]; then

			# Create the link.
			ln -s "$sf_path" "$2"
		fi
	fi

	# Print a line for progress tracking.
	echo mksf_done
}
# Function for creating all links to special folders, in the current directory.
setup-special-folders() {
	cat /cygwin-portable/special-paths | (
		while read sf_num sf_name; do

			# Create links concurrently.
			mksf $sf_num $sf_name &
		done 2> /dev/null

		# Wait for all links to be created.
		wait
	) | (

		# Find out the number of links to be created.
		nofsf=$(grep -Fc "" /cygwin-portable/special-paths)
		let i=0

		# Print progress for every line printed by mksf.
		while read; do
			let i=$i+1
			echo -ne "\e7Creating links to special paths ($i/$nofsf)\e8"
		done
	)
	echo -e '\nDone creating links to special paths'
}

# An identifier for the session context.
ID="$USERNAME@$USERDOMAIN;$USERPROFILE;$(cygpath -w /)"

# A path for caching information about the session context.
IDF="/cygwin-portable/dynamic/$(echo "$ID"|sed -r 's/[\\/]/|/g')"
mkdir -p "$IDF"

# $CUR is (or will be) a symlink to the session context folder.
CUR=/cygwin-portable/cur

# $CUR/session-id exists and has $ID as contents if session is already initialized correctly
# First test whether we need to do anything.
if [ "$ID" != "$(n cat "$CUR/session-id")" ]; then

	# Link $CUR to the correct session context.
	l $CUR "$IDF"

	# Setup the context if not already setup.
	if [ "$ID" != "$(n cat "$CUR/session-id")" ]; then

		# Create passwd and group files. If either fails, which can happen due
		# for example network problems in a domain, then continue still but make sure to try again
		# next time by setting ID to a value that won't be accepted.
		echo writing /etc/passwd
		mkpasswd -l -c | sed -r 's/^(.*\:)[^:]*(\:[^:]*)$/\1\/home\2/' > "$CUR/passwd" || ID=-
		echo writing /etc/group
		mkgroup -l -c > "$CUR/group" || ID=-

		# Create /parent links (with double indirection via context folder).
		l "$CUR/parent" "$(cygpath -u "$(dirname "$(cygpath -w /)")")"
		l /parent "$CUR/parent"

		# Purge and recreate links to special folders.
		sf="$CUR/sf"
		n rm -rf "$sf"
		mkdir -p "$sf"
		l /sf "$sf"
		cd "$sf"
		setup-special-folders

		# Only when all is done will the context be locked so that it's not recreated at next startup.
		echo "$ID" > "$CUR/session-id"
	fi

	# passwd and group cannot be symlinks, so copy them instead.
	# This has to be done here since passwd or group may have been updated, either because of $CUR relinking or because of setup.
	c /etc/passwd "$CUR/passwd"
	c /etc/group "$CUR/group"
fi
